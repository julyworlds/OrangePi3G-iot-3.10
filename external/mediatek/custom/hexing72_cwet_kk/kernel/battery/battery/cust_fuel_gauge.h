#include <mach/mt_typedefs.h>

#define TEMPERATURE_T0                  110
#define TEMPERATURE_T1                  0
#define TEMPERATURE_T2                  25
#define TEMPERATURE_T3                  50
#define TEMPERATURE_T                   255 // This should be fixed, never change the value

#define FG_METER_RESISTANCE 	0

#define MAX_BOOTING_TIME_FGCURRENT	1*10 // 10s

#if defined(CONFIG_POWER_EXT)
#define OCV_BOARD_COMPESATE	72 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#else
#define OCV_BOARD_COMPESATE	0 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#endif

#define Q_MAX_POS_50	1982
#define Q_MAX_POS_25	2028
#define Q_MAX_POS_0		1849
#define Q_MAX_NEG_10	723

#define Q_MAX_POS_50_H_CURRENT	1962
#define Q_MAX_POS_25_H_CURRENT	2006
#define Q_MAX_POS_0_H_CURRENT	  1781
#define Q_MAX_NEG_10_H_CURRENT	343

#define R_FG_VALUE 				20 // mOhm, base is 20
#define CURRENT_DETECT_R_FG	10  //1mA

#define OSR_SELECT_7			0

#define CAR_TUNE_VALUE			94 //1.00

/////////////////////////////////////////////////////////////////////
// <DOD, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] =
{
	{0   , 3908},         
	{4   , 3879},         
	{8   , 3820},         
	{12  , 3806},         
	{17  , 3797},         
	{21  , 3791},         
	{25  , 3789},         
	{29  , 3787},         
	{33  , 3784},         
	{37  , 3781},         
	{41  , 3779},         
	{46  , 3772},         
	{50  , 3763},         
	{54  , 3756},         
	{54  , 3757},         
	{54  , 3758},         
	{56  , 3751},         
	{58  , 3746},         
	{62  , 3734},         
	{63  , 3734},         
	{63  , 3735},         
	{64  , 3733},         
	{67  , 3720},         
	{67  , 3713},         
	{70  , 3715},         
	{72  , 3713},         
	{76  , 3708},         
	{80  , 3703},         
	{84  , 3691},         
	{89  , 3666},         
	{93  , 3620},         
	{96  , 3563},         
	{97  , 3536},         
	{98  , 3518},         
	{99  , 3505},         
	{99  , 3498},         
	{99  , 3493},         
	{99  , 3488},         
	{99  , 3485},         
	{99  , 3482},         
	{99  , 3482},         
	{100 , 3481},         
	{100 , 3480},         
	{100 , 3478},         
	{100 , 3479},         
	{100 , 3477},         
	{100 , 3475},         
	{100 , 3475},         
	{100 , 3475},         
	{100 , 3473},         
	{100 , 3474},         
	{100 , 3473},         
	{100 , 3472},         
	{100 , 3472},         
	{100 , 3470},         
	{100 , 3469},         
	{100 , 3469},         
	{100 , 3468},         
	{100 , 3465},         
	{100 , 3466},         
	{100 , 3464},          
  {100 , 3462},
  {100 , 3461},
  {100 , 3462},
  {100 , 3459},
  {100 , 3459},
  {100 , 3458},
  {100 , 3457},
  {100 , 3458},
  {100 , 3456},
	{100 , 3457}, 
	{100 , 3454},
	{100 , 3455},
	{100 , 3453},
	{100 , 3452},
	{100 , 3453}, 
	{100 , 3451}	       
};      
        
// T1 0C 
BATTERY_PROFILE_STRUC battery_profile_t1[] =
{
	{0   , 4153},         
	{2   , 4120},         
	{3   , 4094},         
	{5   , 4079},         
	{6   , 4056},         
	{8   , 4032},         
	{10  , 4011},         
	{11  , 3998},         
	{13  , 3987},         
	{15  , 3980},         
	{16  , 3972},         
	{18  , 3967},         
	{19  , 3959},         
	{21  , 3951},         
	{23  , 3941},         
	{24  , 3932},         
	{26  , 3923},         
	{28  , 3914},         
	{29  , 3904},         
	{31  , 3891},         
	{32  , 3879},         
	{34  , 3867},         
	{36  , 3857},         
	{37  , 3848},         
	{39  , 3842},         
	{41  , 3835},         
	{42  , 3828},         
	{44  , 3821},         
	{45  , 3817},         
	{47  , 3812},         
	{49  , 3808},         
	{50  , 3804},         
	{52  , 3799},         
	{53  , 3797},         
	{55  , 3793},         
	{57  , 3790},         
	{58  , 3787},         
	{60  , 3785},         
	{62  , 3783},         
	{63  , 3781},         
	{65  , 3780},         
	{66  , 3778},         
	{68  , 3775},         
	{70  , 3773},         
	{71  , 3768},         
	{73  , 3765},         
	{75  , 3762},         
	{76  , 3756},         
	{78  , 3751},         
	{79  , 3747},         
	{81  , 3740},         
	{83  , 3734},         
	{84  , 3725},         
	{86  , 3717},         
	{88  , 3711},         
	{89  , 3706},         
	{91  , 3702},         
	{92  , 3696},         
	{94  , 3687},         
	{96  , 3652},         
	{97  , 3594},          
  {99  , 3501},
  {100 , 3424},
  {100 , 3396},
  {100 , 3383},
  {100 , 3374},
  {100 , 3372},
  {100 , 3370},
  {100 , 3369},
  {100 , 3369},
	{100 , 3368}, 
	{100 , 3366},
	{100 , 3365},
	{100 , 3363},
	{100 , 3362},
	{100 , 3362}, 
	{100 , 3360}	       
};           

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] =
{
	{0   , 4176},         
	{1   , 4157},         
	{3   , 4143},         
	{4   , 4128},         
	{6   , 4114},         
	{7   , 4101},         
	{9   , 4088},         
	{10  , 4078},         
	{12  , 4067},         
	{13  , 4052},         
	{15  , 4037},         
	{16  , 4022},         
	{18  , 4009},         
	{19  , 3999},         
	{21  , 3990},         
	{22  , 3980},         
	{24  , 3974},         
	{25  , 3963},         
	{27  , 3955},         
	{28  , 3945},         
	{30  , 3937},         
	{31  , 3928},         
	{32  , 3918},         
	{34  , 3911},         
	{35  , 3901},         
	{37  , 3892},         
	{38  , 3877},         
	{40  , 3864},         
	{41  , 3851},         
	{43  , 3843},         
	{44  , 3836},         
	{46  , 3829},         
	{47  , 3824},         
	{49  , 3819},         
	{50  , 3814},         
	{52  , 3809},         
	{53  , 3805},         
	{55  , 3802},         
	{56  , 3798},         
	{58  , 3794},         
	{59  , 3792},         
	{61  , 3788},         
	{62  , 3786},         
	{64  , 3782},         
	{65  , 3781},         
	{67  , 3777},         
	{68  , 3776},         
	{69  , 3774},         
	{71  , 3770},         
	{72  , 3764},         
	{74  , 3761},         
	{75  , 3754},         
	{77  , 3748},         
	{78  , 3745},         
	{80  , 3742},         
	{81  , 3735},         
	{83  , 3730},         
	{84  , 3721},         
	{86  , 3715},         
	{87  , 3707},         
	{89  , 3696},          
  {90  , 3692},
  {92  , 3690},
  {93  , 3685},
  {95  , 3679},
  {96  , 3646},
  {98  , 3585},
  {99  , 3499},
  {100 , 3356},
  {100 , 3307},
	{100 , 3294}, 
	{100 , 3288},
	{100 , 3282},
	{100 , 3280},
	{100 , 3279},
	{100 , 3277}, 
	{100 , 3276}	       
};     

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] =
{
	{0   , 4178},         
	{2   , 4162},         
	{3   , 4145},         
	{5   , 4133},         
	{6   , 4119},         
	{8   , 4104},         
	{9   , 4090},         
	{11  , 4078},         
	{12  , 4065},         
	{14  , 4052},         
	{15  , 4040},         
	{17  , 4029},         
	{18  , 4017},         
	{20  , 4006},         
	{21  , 3994},         
	{23  , 3984},         
	{24  , 3974},         
	{26  , 3964},         
	{27  , 3955},         
	{29  , 3943},         
	{30  , 3934},         
	{32  , 3925},         
	{33  , 3916},         
	{35  , 3908},         
	{36  , 3897},         
	{38  , 3885},         
	{39  , 3872},         
	{41  , 3859},         
	{42  , 3851},         
	{44  , 3843},         
	{45  , 3834},         
	{47  , 3829},         
	{48  , 3824},         
	{50  , 3818},         
	{51  , 3813},         
	{53  , 3807},         
	{54  , 3804},         
	{56  , 3800},         
	{57  , 3795},         
	{59  , 3792},         
	{60  , 3788},         
	{62  , 3784},         
	{64  , 3782},         
	{65  , 3778},         
	{67  , 3775},         
	{68  , 3771},         
	{70  , 3763},         
	{71  , 3755},         
	{73  , 3747},         
	{74  , 3742},         
	{76  , 3737},         
	{77  , 3730},         
	{79  , 3726},         
	{80  , 3721},         
	{82  , 3716},         
	{83  , 3710},         
	{85  , 3702},         
	{86  , 3697},         
	{88  , 3686},         
	{89  , 3678},         
	{91  , 3676},          
  {92  , 3674},
  {94  , 3670},
  {95  , 3652},
  {97  , 3604},
  {98  , 3533},
  {100 , 3424},
  {100 , 3296},
  {100 , 3279},
  {100 , 3274},
	{100 , 3273}, 
	{100 , 3272},
	{100 , 3273},
	{100 , 3270},
	{100 , 3271},
	{100 , 3271}, 
	{100 , 3271}	       
};           

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
  {0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },  
	{0  , 0 }, 
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },  
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 }
};      

/////////////////////////////////////////////////////////////////////
// <Rbat, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

// T0 -10C
R_PROFILE_STRUC r_profile_t0[] =
{
	{360  , 4176},         
	{543  , 4157},         
	{585  , 4143},         
	{788  , 4128},         
	{825  , 4114},         
	{1125 , 4101},         
	{1168 , 4088},         
	{753  , 4078},         
	{823  , 4067},         
	{810  , 4052},         
	{810  , 4037},         
	{808  , 4022},         
	{1055 , 4009},         
	{1398 , 3999},         
	{1403 , 3990},         
	{1395 , 3980},         
	{1410 , 3974},         
	{1423 , 3963},         
	{938  , 3955},         
	{1335 , 3945},         
	{1388 , 3937},         
	{1383 , 3928},         
	{1305 , 3918},         
	{1298 , 3911},         
	{1340 , 3901},         
	{1288 , 3892},         
	{1123 , 3877},         
	{840  , 3864},         
	{853  , 3851},         
	{890  , 3843},         
	{908  , 3836},         
	{910  , 3829},         
	{843  , 3824},         
	{795  , 3819},         
	{765  , 3814},         
	{748  , 3809},         
	{740  , 3805},         
	{728  , 3802},         
	{718  , 3798},         
	{723  , 3794},         
	{710  , 3792},         
	{710  , 3788},         
	{705  , 3786},         
	{695  , 3782},         
	{700  , 3781},         
	{700  , 3777},         
	{690  , 3776},         
	{698  , 3774},         
	{698  , 3770},         
	{688  , 3764},         
	{693  , 3761},         
	{685  , 3754},         
	{693  , 3748},         
	{685  , 3745},         
	{693  , 3742},         
	{693  , 3735},         
	{685  , 3730},         
	{695  , 3721},         
	{680  , 3715},         
	{688  , 3707},         
	{695  , 3696},          
  {693  , 3692},
  {693  , 3690},
  {690  , 3685},
  {688  , 3679},
  {688  , 3646},
  {650  , 3585},
  {688  , 3499},
  {688  , 3356},
  {690  , 3307},
	{693  , 3294}, 
	{655  , 3288},
	{693  , 3282},
	{693  , 3280},
	{655  , 3279},
	{655  , 3277}, 
	{695  , 3276}	       
};      

// T1 0C
R_PROFILE_STRUC r_profile_t1[] =
{
	{268 , 4176},         
	{333 , 4157},         
	{393 , 4143},         
	{428 , 4128},         
	{418 , 4114},         
	{438 , 4101},         
	{433 , 4088},         
	{460 , 4078},         
	{438 , 4067},         
	{443 , 4052},         
	{445 , 4037},         
	{453 , 4022},         
	{453 , 4009},         
	{463 , 3999},         
	{463 , 3990},         
	{463 , 3980},         
	{460 , 3974},         
	{455 , 3963},         
	{460 , 3955},         
	{458 , 3945},         
	{450 , 3937},         
	{453 , 3928},         
	{453 , 3918},         
	{460 , 3911},         
	{438 , 3901},         
	{458 , 3892},         
	{465 , 3877},         
	{453 , 3864},         
	{465 , 3851},         
	{460 , 3843},         
	{470 , 3836},         
	{478 , 3829},         
	{473 , 3824},         
	{500 , 3819},         
	{483 , 3814},         
	{505 , 3809},         
	{495 , 3805},         
	{503 , 3802},         
	{515 , 3798},         
	{493 , 3794},         
	{478 , 3792},         
	{503 , 3788},         
	{528 , 3786},         
	{510 , 3782},         
	{498 , 3781},         
	{468 , 3777},         
	{500 , 3776},         
	{528 , 3774},         
	{530 , 3770},         
	{540 , 3764},         
	{538 , 3761},         
	{483 , 3754},         
	{485 , 3748},         
	{495 , 3745},         
	{533 , 3742},         
	{545 , 3735},         
	{540 , 3730},         
	{520 , 3721},         
	{600 , 3715},         
	{548 , 3707},         
	{585 , 3696},          
  {620 , 3692},
  {563 , 3690},
  {498 , 3685},
  {460 , 3679},
  {438 , 3646},
  {433 , 3585},
  {428 , 3499},
  {435 , 3356},
  {435 , 3307},
	{428 , 3294}, 
	{428 , 3288},
	{420 , 3282},
	{413 , 3280},
	{413 , 3279},
	{418 , 3277}, 
	{418 , 3276}	       
};     

// T2 25C
R_PROFILE_STRUC r_profile_t2[] =
{
	{150  , 4176},         
	{230  , 4157},         
	{243  , 4143},         
	{243  , 4128},         
	{248  , 4114},         
	{253  , 4101},         
	{240  , 4088},         
	{243  , 4078},         
	{243  , 4067},         
	{238  , 4052},         
	{245  , 4037},         
	{250  , 4022},         
	{253  , 4009},         
	{258  , 3999},         
	{255  , 3990},         
	{255  , 3980},         
	{270  , 3974},         
	{270  , 3963},         
	{298  , 3955},         
	{275  , 3945},         
	{300  , 3937},         
	{388  , 3928},         
	{418  , 3918},         
	{325  , 3911},         
	{298  , 3901},         
	{265  , 3892},         
	{258  , 3877},         
	{238  , 3864},         
	{223  , 3851},         
	{215  , 3843},         
	{220  , 3836},         
	{215  , 3829},         
	{213  , 3824},         
	{218  , 3819},         
	{225  , 3814},         
	{225  , 3809},         
	{228  , 3805},         
	{233  , 3802},         
	{235  , 3798},         
	{233  , 3794},         
	{238  , 3792},         
	{233  , 3788},         
	{235  , 3786},         
	{235  , 3782},         
	{240  , 3781},         
	{235  , 3777},         
	{238  , 3776},         
	{240  , 3774},         
	{240  , 3770},         
	{230  , 3764},         
	{230  , 3761},         
	{223  , 3754},         
	{228  , 3748},         
	{223  , 3745},         
	{230  , 3742},         
	{228  , 3735},         
	{230  , 3730},         
	{223  , 3721},         
	{223  , 3715},         
	{223  , 3707},         
	{210  , 3696},          
  {218  , 3692},
  {230  , 3690},
  {233  , 3685},
  {240  , 3679},
  {235  , 3646},
  {240  , 3585},
  {258  , 3499},
  {298  , 3356},
  {273  , 3307},
	{243  , 3294}, 
	{223  , 3288},
	{210  , 3282},
	{205  , 3280},
	{203  , 3279},
	{193  , 3277}, 
	{193  , 3276}	       
}; 

// T3 50C
R_PROFILE_STRUC r_profile_t3[] =
{
	{150  , 4176},         
	{193  , 4157},         
	{188  , 4143},         
	{195  , 4128},         
	{193  , 4114},         
	{188  , 4101},         
	{188  , 4088},         
	{190  , 4078},         
	{193  , 4067},         
	{193  , 4052},         
	{193  , 4037},         
	{203  , 4022},         
	{198  , 4009},         
	{210  , 3999},         
	{500  , 3990},         
	{238  , 3980},         
	{253  , 3974},         
	{263  , 3963},         
	{278  , 3955},         
	{338  , 3945},         
	{298  , 3937},         
	{555  , 3928},         
	{493  , 3918},         
	{230  , 3911},         
	{225  , 3901},         
	{225  , 3892},         
	{223  , 3877},         
	{265  , 3864},         
	{508  , 3851},         
	{320  , 3843},         
	{430  , 3836},         
	{268  , 3829},         
	{505  , 3824},         
	{400  , 3819},         
	{235  , 3814},         
	{225  , 3809},         
	{215  , 3805},         
	{218  , 3802},         
	{268  , 3798},         
	{203  , 3794},         
	{213  , 3792},         
	{218  , 3788},         
	{263  , 3786},         
	{230  , 3782},         
	{200  , 3781},         
	{200  , 3777},         
	{185  , 3776},         
	{208  , 3774},         
	{198  , 3770},         
	{193  , 3764},         
	{195  , 3761},         
	{205  , 3754},         
	{193  , 3748},         
	{185  , 3745},         
	{185  , 3742},         
	{193  , 3735},         
	{188  , 3730},         
	{195  , 3721},         
	{183  , 3715},         
	{178  , 3707},         
	{185  , 3696},          
  {185  , 3692},
  {198  , 3690},
  {198  , 3685},
  {193  , 3679},
  {198  , 3646},
  {215  , 3585},
  {243  , 3499},
  {200  , 3356},
  {190  , 3307},
	{185  , 3294}, 
	{185  , 3288},
	{185  , 3282},
	{178  , 3280},
	{178  , 3279},
	{178  , 3277}, 
	{183  , 3276}	       
}; 

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
  {0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },  
	{0  , 0 }, 
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },  
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 },
	{0  , 0 }
};      


int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);

#define CONFIG_POWER_VERIFY