/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *   sensor.h
 *
 * Project:
 * --------
 *   DUMA
 *
 * Description:
 * ------------
 *   CMOS sensor header file
 *
 ****************************************************************************/
#ifndef __SENSOR_H
#define __SENSOR_H

//------------------------Engineer mode---------------------------------
#define FACTORY_START_ADDR 	0
#define ENGINEER_START_ADDR	10

typedef enum group_enum {
	PRE_GAIN=0,
	CMMCLK_CURRENT,
	FRAME_RATE_LIMITATION,
	REGISTER_EDITOR,
	GROUP_TOTAL_NUMS
} FACTORY_REGISTER_INDEX;

typedef enum register_index {
	SENSOR_BASEGAIN=FACTORY_START_ADDR,
	PRE_GAIN_R_INDEX,
	PRE_GAIN_Gr_INDEX,
	PRE_GAIN_Gb_INDEX,
	PRE_GAIN_B_INDEX,
	FACTORY_END_ADDR
} CCT_REGISTER_INDEX;

typedef enum engineer_index
{
	CMMCLK_CURRENT_INDEX=ENGINEER_START_ADDR,
	ENGINEER_END
} FACTORY_ENGINEER_INDEX;

//------------------------Engineer mode---------------------------------
typedef struct {
	SENSOR_REG_STRUCT Reg[ENGINEER_END];
	SENSOR_REG_STRUCT CCT[FACTORY_END_ADDR];
} SENSOR_DATA_STRUCT,*PSENSOR_DATA_STRUCT;

#define CAM_PREVIEW_30FPS
#define SYSTEM_CLK									(52*1000*1000)
/* PIXEL CLOCK USED BY BANDING FILTER CACULATION*/
#if defined(CAM_PREVIEW_15FPS)
	#define PIXEL_CLK								(SYSTEM_CLK/8)		// 52/8 MHz
#elif defined(CAM_PREVIEW_22FPS)
	#define PIXEL_CLK								(SYSTEM_CLK/6)		// 52/6 MHz
#elif defined(CAM_PREVIEW_30FPS)
	#define PIXEL_CLK								(SYSTEM_CLK/4)		// 52/4 MHz
#endif

/* MAXIMUM EXPLOSURE LINES USED BY AE */
   extern kal_uint16 BF3925_MAX_EXPOSURE_LINES;
   extern kal_uint8  BF3925_MIN_EXPOSURE_LINES;

   /*Important: If you use Nor Flash with Paging Mode PSRAM, you should use this Macro*/
   //#define MCP_NOR_PAGING_MODE_PSRAM_BF3925
   
   /* MAX/MIN FRAME RATE (FRAMES PER SEC.) */
   #define BF3925_MIN_FRAME_RATE  (12)	  // Limitation for Camera Preiview

   /* SENSOR PIXEL/LINE NUMBERS IN ONE PERIOD */
   #define BF3925_FULL_PERIOD_PIXEL_NUMS  (1856)  // default pixel#(w/o dummy pixels) in UXGA mode
   #define BF3925_FULL_PERIOD_LINE_NUMS   (1220)  // default line#(w/o dummy lines) in UXGA mode
   #define BF3925_PV_PERIOD_PIXEL_NUMS	  (1856)  // default pixel#(w/o dummy pixels) in SVGA mode
   #define BF3925_PV_PERIOD_LINE_NUMS	  (1220)   // default line#(w/o dummy lines) in SVGA mode

   /* SENSOR EXPOSURE LINE LIMITATION */
   #define BF3925_FULL_EXPOSURE_LIMITATION	  (1236)
   #define BF3925_PV_EXPOSURE_LIMITATION	  (618)

   // SENSOR UXGA SIZE
   #define BF3925_IMAGE_SENSOR_FULL_WIDTH	  (1600 - 16)
   #define BF3925_IMAGE_SENSOR_FULL_HEIGHT	  (1200 - 12)

   // SENSOR VGA SIZE
   #define BF3925_IMAGE_SENSOR_PV_WIDTH   (800 - 8)//(1600 - 16)//(800 - 8)
   #define BF3925_IMAGE_SENSOR_PV_HEIGHT  (600 - 6)//(1200 - 12)//(600 - 6)

   #define BF3925_VIDEO_30FPS_FRAME_LENGTH	 (1856)
   #define BF3925_VIDEO_20FPS_FRAME_LENGTH	 (1856)
   #define BF3925_VIDEO_15FPS_FRAME_LENGTH	 (1856)
   #define BF3925_VIDEO_10FPS_FRAME_LENGTH	 (1856)
   #define BF3925_VIDEO_7D5FPS_FRAME_LENGTH  (1856)
   #define BF3925_VIDEO_5FPS_FRAME_LENGTH	(1856)

   // SETUP TIME NEED TO BE INSERTED
   #define BF3925_IMAGE_SENSOR_PV_INSERTED_PIXELS (340)//390
   #define BF3925_IMAGE_SENSOR_PV_INSERTED_LINES  (18 - 6)//9-6

   #define BF3925_IMAGE_SENSOR_FULL_INSERTED_PIXELS   (248)
   #define BF3925_IMAGE_SENSOR_FULL_INSERTED_LINES	  (11 - 2)

   // SENSOR READ/WRITE ID
   #define BF3925_WRITE_ID (0xdc)
   #define BF3925_READ_ID  (0xdd)

//export functions
UINT32 BF3925Open(void);
UINT32 BF3925GetResolution(MSDK_SENSOR_RESOLUTION_INFO_STRUCT *pSensorResolution);
UINT32 BF3925GetInfo(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_INFO_STRUCT *pSensorInfo, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
UINT32 BF3925Control(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_EXPOSURE_WINDOW_STRUCT *pImageWindow, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
UINT32 BF3925FeatureControl(MSDK_SENSOR_FEATURE_ENUM FeatureId, UINT8 *pFeaturePara,UINT32 *pFeatureParaLen);
UINT32 BF3925Close(void);

#endif /* __SENSOR_H */

